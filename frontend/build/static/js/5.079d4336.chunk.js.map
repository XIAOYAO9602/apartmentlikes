{"version":3,"sources":["shared/components/FormElements/Button.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Card.js","myplaces/components/MyPlacesCard.js","myplaces/pages/MyPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","mode","credentials","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","Fragment","show","Backdrop","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","Card","MyPlacesCard","entry","place","showImage","setShowImage","title","hood","housing","price","images","date","Date","created","toLocaleDateString","onUnlike","map","image","idx","key","src","MyPlaces","state","setState","fetchPlaces","process","places","unlike","doc","_id","LoadingSpinner"],"mappings":"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","file":"static/js/5.079d4336.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n          mode: \"cors\",\n          credentials: \"include\"\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport \"./MyPlaces.css\";\n\nconst MyPlacesCard = props => {\n    const entry = props.place.place;\n    const [showImage, setShowImage] = useState(false);\n    const title = entry[\"result-title\"];\n    const hood = entry[\"result-hood\"];\n    const housing = entry[\"housing\"];\n    const price = entry[\"result-price\"];\n    const images = entry && entry[\"images\"] ? entry[\"images\"] : [];\n    const date = new Date(props.place.created);\n    const onUnlike = () => {\n        props.onUnlike(props.place);\n    }\n    const toggleImage = () => {\n        setShowImage(!showImage);\n    }\n    \n    return (\n        <React.Fragment>\n            <Card className='place-card'>\n                <h3>{ title }</h3>\n                <h4>Saved on {date.toLocaleDateString()}</h4>\n                <h4>{ hood } { housing }</h4>\n                <p>{ price }</p>\n                <Button onClick={onUnlike}>\n                    Unlike\n                </Button>\n                <Button onClick={toggleImage}>\n                    Show Images\n                </Button>\n                <div className={ showImage ? 'show-images' : 'hide-images' }>\n                    {images.map((image, idx) => <img key={idx} src={image}></img>)}\n                </div>\n            </Card>\n            <hr></hr>\n        </React.Fragment>\n    );\n}\n\nexport default MyPlacesCard;","import React, { useEffect, useState } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport MyPlacesCard from '../components/MyPlacesCard';\n\nconst MyPlaces = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\tconst [state, setState] = useState();\n    const fetchPlaces = async () => {\n        try {\n            const responseData = await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/places`\n            );\n            setState({\n                places: responseData\n            });\n        } catch (err) {}\n    };\n\tuseEffect(() => {\n\t\tfetchPlaces();\n    }, []);\n\n    const unlike = async (doc) => {\n        await sendRequest(\n            `${process.env.REACT_APP_BACKEND_URL}/places/${doc._id}`,\n            'DELETE'\n        );\n        await fetchPlaces();\n    }\n\treturn (\n\t\t<React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n\t\t\t{isLoading && (\n\t\t\t \t<div className=\"center\">\n\t\t\t \t\t<LoadingSpinner />\n\t\t\t \t</div>\n\t\t\t)}\n\t\t\t{!isLoading && state && state.places.map((place, idx) => <MyPlacesCard place={place} key={idx} onUnlike={unlike}/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default MyPlaces;"],"sourceRoot":""}