{"version":3,"sources":["shared/components/FormElements/Button.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","dash/components/Table.js","dash/pages/Dashboard.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","mode","credentials","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","style","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","ReactDOM","createPortal","document","getElementById","Modal","Fragment","show","Backdrop","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","column","idx","key","render","row","i","getRowProps","cells","cell","j","getCellProps","Dashboard","state","setState","React","useMemo","Header","accessor","Cell","value","length","width","src","Date","toLocaleDateString","fetchPlaces","process","places","page","getPage","order","sortBy","next","back","onOrder","ev","target","onSort","class","for","onChange","name","id","selected","LoadingSpinner"],"mappings":"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","file":"static/js/6.edbad831.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal,\n          mode: \"cors\",\n          credentials: \"include\"\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\n\nimport \"./Table.css\";\n\nexport default function Table({ columns, data }) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable(\n        {\n            columns,\n            data\n        }\n    );\n    return (\n        <table {...getTableProps()} className=\"table table-bordered table-condensed table-responsive\" style={{ 'display': 'table' }} >\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map((column, idx) => (\n                            <th key={idx}>\n                                {column.render(\"Header\")}\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row);\n                    return (\n                        <tr {...row.getRowProps()} key={i}>\n                            {row.cells.map((cell, j) => {\n                                return (\n                                    <td {...cell.getCellProps()} key={i*10 + j}>{cell.render(\"Cell\")}</td>\n                                );\n                            })}\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport Table from '../components/Table';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [state, setState] = useState();\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: \"Front Image\",\n                accessor: \"images\",\n                Cell: ({ cell: { value } }) => value && value.length > 0 ? \n                    <img className=\"img-fluid img-rounded\" width={200} src={value[0]} />\n                    : null\n            },\n            {\n                Header: 'Name',\n                accessor: 'result-title', // accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Price',\n                accessor: 'result-price',\n            },\n            {\n                Header: 'Date',\n                accessor: 'date',\n                Cell: ({ cell: { value } }) => (new Date(value)).toLocaleDateString()\n            },\n            {\n                Header: 'Unit Size',\n                accessor: 'housing',\n            },\n        ],\n        []\n    )\n    const fetchPlaces = async () => {\n        try {\n            const responseData = await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/entries?page=1`\n            );\n            setState({\n                ...state,\n                places: responseData,\n                page: 1\n            });\n        } catch (err) {}\n    };\n\tuseEffect(() => {\n\t\tfetchPlaces();\n    }, []);\n    const getPage = async (page) => {\n        try {\n            let url = `${process.env.REACT_APP_BACKEND_URL}/entries?page=${page}`;\n            if (state.order) {\n                url += `&order=${state.order}`;\n            }\n            if (state.sortBy) {\n                url += `&sortBy=${state.sortBy}`;\n            }\n            const responseData = await sendRequest(\n                url\n            );\n            setState({\n                ...state,\n                places: responseData,\n                page: page\n            });\n        } catch (err) {}\n    }\n    const next = async () => {\n        await getPage(state.page + 1);\n    }\n    const back = async () => {\n        await getPage(state.page - 1);\n    }\n    const onOrder = async (ev) => {\n        const order = ev.target.value;\n        if (!state.sortBy) {\n            return;\n        }\n        let url = `${process.env.REACT_APP_BACKEND_URL}/entries?page=${state.page}&sortBy=${state.sortBy}&order=${order}`;\n        try {\n            const responseData = await sendRequest(url);\n            setState({\n                ...state,\n                places: responseData,\n                order\n            });\n        } catch (err) {}\n    }\n    const onSort = async (ev) => {\n        const sortBy = ev.target.value;\n        let url = `${process.env.REACT_APP_BACKEND_URL}/entries?page=${state.page}&sortBy=${sortBy}`;\n        if (state.order) {\n            url += `&order=${state.order}`;\n        }\n        try {\n            const responseData = await sendRequest(url);\n            setState({\n                ...state,\n                places: responseData,\n                sortBy\n            });\n        } catch (err) {}\n    }\n    const places = state && state.places ? state.places : null;\n\treturn (\n\t\t<React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <div class=\"sort-by\">\n                <label for=\"sortBy\">Sort By:</label>\n                <select onChange={onSort} name=\"sortBy\" id=\"sortBy\">\n                    <option disabled selected value> -- select an option -- </option>\n                    <option value=\"price\">Price</option>\n                    <option value=\"date\">Date</option>\n                </select>\n                <label for=\"order\">Order</label>\n                <select onChange={onOrder}  name=\"order\" id=\"order\">\n                    <option disabled selected value> -- select an option -- </option>\n                    <option value=\"1\">Ascending</option>\n                    <option value=\"-1\">Descending</option>\n                </select>\n            </div>\n\t\t\t{isLoading && (\n\t\t\t \t<div className=\"center\">\n\t\t\t \t\t<LoadingSpinner />\n\t\t\t \t</div>\n\t\t\t)}\n\t\t\t{!isLoading && places && <Table columns={columns} data={places}/>}\n            {!isLoading && places && <div>\n                { state.page > 1 && <Button onClick={back}>Back</Button> }\n                <Button onClick={next}>Next</Button>\n            </div>}\n\t\t</React.Fragment>\n    );\n};\n\nexport default Dashboard;"],"sourceRoot":""}